<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:Streamduck.UI.ViewModels"
        xmlns:reactiveUi="clr-namespace:Avalonia.ReactiveUI;assembly=Avalonia.ReactiveUI"
        xmlns:ui="clr-namespace:Streamduck.UI"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Streamduck.UI.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
        Title="Streamduck"
        Icon="/UI/Assets/streamducklogo.ico"
        MinWidth="800"
        MinHeight="600">
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <viewModels:MainWindowViewModel />
    </Design.DataContext>
    <Border>
        <Border.Background>
            <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                <GradientStop Offset="0" Color="{DynamicResource SystemAccentColor}" />
                <GradientStop Offset="1" Color="{DynamicResource SystemAccentColorDark2}" />
            </LinearGradientBrush>
        </Border.Background>
        <reactiveUi:RoutedViewHost Router="{Binding Router}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch">
            <reactiveUi:RoutedViewHost.PageTransition>
                <CrossFade Duration="0.2">
                    <CrossFade.FadeInEasing>
                        <QuinticEaseInOut />
                    </CrossFade.FadeInEasing>
                    <CrossFade.FadeOutEasing>
                        <QuinticEaseInOut />
                    </CrossFade.FadeOutEasing>
                </CrossFade>
            </reactiveUi:RoutedViewHost.PageTransition>
            <reactiveUi:RoutedViewHost.ViewLocator>
                <ui:AppViewLocator />
            </reactiveUi:RoutedViewHost.ViewLocator>
        </reactiveUi:RoutedViewHost>
    </Border>
</Window>